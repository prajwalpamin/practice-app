{"version":3,"sources":["components/lifecycle/index.js","App.js","reportWebVitals.js","index.js"],"names":["TestC","props","state","count","console","log","nextProps","nextState","prevProps","prevState","this","onClick","setState","React","Component","App","useState","setCount","useEffect","document","title","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"mQAoCeA,E,kDAjCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,GAEXC,QAAQC,IAAI,eALG,E,yDASnB,WAEI,OADAD,QAAQC,IAAI,yBACL,I,iCAGX,SAAoBC,EAAWC,GAC3BH,QAAQC,IAAI,yB,gCAGhB,SAAmBG,EAAWC,GAC1BL,QAAQC,IAAI,wB,oBAIhB,WAAU,IAAD,OAEL,OADAD,QAAQC,IAAI,UAER,gCACCK,KAAKR,MAAMC,MACZ,wBAAQQ,QAAS,kBAAI,EAAKC,SAAS,CAACT,MAAO,KAA3C,6B,GA7BQU,IAAMC,WCmBXC,MAhBf,WACE,MAA0BC,mBAAS,GAAnC,mBAAOb,EAAP,KAAcc,EAAd,KAIA,OAHAC,qBAAU,WACRC,SAASC,MAAT,sBAAgCjB,EAAhC,YACA,IAEA,gCACE,cAAC,EAAD,IACA,6CAAgBA,EAAhB,YACA,wBAAQQ,QAAS,kBAAMM,EAASd,EAAQ,IAAxC,0BCFSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAIFb,SAASc,eAAe,SAM1BZ,M","file":"static/js/main.602566f9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass TestC extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            count: 0\r\n        }\r\n        console.log(\"constructor\");\r\n        \r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        console.log('shouldComponentUpdate')\r\n        return 1;\r\n        \r\n    }\r\n    componentWillUpdate(nextProps, nextState) {\r\n        console.log('componentWillUpdate')\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log('componentDidUpdate')\r\n        \r\n    }\r\n   \r\n    render() {\r\n        console.log(\"render\");\r\n        return (\r\n            <div >\r\n            {this.state.count}\r\n            <button onClick={()=>this.setState({count: 1})}>Click Me</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TestC;","\nimport './App.css';\nimport React,{useState,useEffect} from 'react';\nimport TestC from \"./components/lifecycle\"\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    document.title = `You clicked ${count} times`;\n  },[]);\n  return (\n    <div>\n      <TestC/>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\"\n\nReactDOM.render(\n  <React.StrictMode>\n  \n    <App />\n  \n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}